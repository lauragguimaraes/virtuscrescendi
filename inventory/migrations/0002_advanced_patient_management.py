# Generated by Django 4.2.7 on 2025-08-26 21:25

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('inventory', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PatientSession',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('session_number', models.PositiveIntegerField(verbose_name='Número da Sessão')),
                ('session_date', models.DateField(verbose_name='Data da Sessão')),
                ('protocol_name', models.CharField(blank=True, max_length=200, verbose_name='Nome do Protocolo')),
                ('procedure_description', models.TextField(blank=True, verbose_name='Descrição do Procedimento')),
                ('total_value', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Valor Total')),
                ('payment_status', models.CharField(choices=[('pendente', 'Pendente'), ('pago', 'Pago'), ('parcial', 'Parcial'), ('cancelado', 'Cancelado')], default='pendente', max_length=20, verbose_name='Status do Pagamento')),
                ('payment_method', models.CharField(blank=True, choices=[('dinheiro', 'Dinheiro'), ('cartao_credito', 'Cartão de Crédito'), ('cartao_debito', 'Cartão de Débito'), ('pix', 'PIX'), ('transferencia', 'Transferência'), ('convenio', 'Convênio')], max_length=20, verbose_name='Forma de Pagamento')),
                ('payment_date', models.DateField(blank=True, null=True, verbose_name='Data do Pagamento')),
                ('payment_notes', models.TextField(blank=True, verbose_name='Observações do Pagamento')),
                ('clinical_notes', models.TextField(blank=True, verbose_name='Observações Clínicas')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sessions_created', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='inventory.patient', verbose_name='Paciente')),
                ('unit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.unit', verbose_name='Unidade')),
            ],
            options={
                'verbose_name': 'Sessão do Paciente',
                'verbose_name_plural': 'Sessões dos Pacientes',
                'ordering': ['-session_date', '-session_number'],
                'unique_together': {('patient', 'session_number')},
            },
        ),
        migrations.AddField(
            model_name='substance',
            name='preco_padrao',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Preço Padrão por Unidade'),
        ),
        migrations.AlterField(
            model_name='substance',
            name='estoque_minimo_default',
            field=models.DecimalField(decimal_places=2, default=Decimal('1.0'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Estoque Mínimo Padrão'),
        ),
        migrations.CreateModel(
            name='ProtocolTemplate',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='Nome do Protocolo')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('default_sessions', models.PositiveIntegerField(default=1, verbose_name='Número Padrão de Sessões')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Atualizado em')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='protocols_created', to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
            ],
            options={
                'verbose_name': 'Template de Protocolo',
                'verbose_name_plural': 'Templates de Protocolos',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='stockmovement',
            name='session',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='movements', to='inventory.patientsession', verbose_name='Sessão'),
        ),
        migrations.CreateModel(
            name='SessionSubstance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Quantidade')),
                ('unit_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Preço Unitário')),
                ('total_price', models.DecimalField(decimal_places=2, default=0, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))], verbose_name='Preço Total')),
                ('notes', models.TextField(blank=True, verbose_name='Observações')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Criado em')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Criado por')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='substances', to='inventory.patientsession', verbose_name='Sessão')),
                ('substance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.substance', verbose_name='Substância')),
            ],
            options={
                'verbose_name': 'Substância da Sessão',
                'verbose_name_plural': 'Substâncias das Sessões',
                'ordering': ['substance__nome_comum'],
                'unique_together': {('session', 'substance')},
            },
        ),
        migrations.CreateModel(
            name='ProtocolSubstance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('default_quantity', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Quantidade Padrão')),
                ('is_optional', models.BooleanField(default=False, verbose_name='Opcional')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Ordem')),
                ('notes', models.TextField(blank=True, verbose_name='Observações')),
                ('protocol', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='substances', to='inventory.protocoltemplate', verbose_name='Protocolo')),
                ('substance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.substance', verbose_name='Substância')),
            ],
            options={
                'verbose_name': 'Substância do Protocolo',
                'verbose_name_plural': 'Substâncias dos Protocolos',
                'ordering': ['order', 'substance__nome_comum'],
                'unique_together': {('protocol', 'substance')},
            },
        ),
    ]
